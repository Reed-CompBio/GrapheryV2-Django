[{"model": "backend.user", "pk": "61706ca4-892c-4129-ac69-ceb5d79d8a51", "fields": {"password": "pbkdf2_sha256$260000$2hXLSUV9wqMOs8xdbZdrKP$HHpJjQLwO0T0Cl37w2XD1Jcx/cT9YV+xMVOqePP8Xfc=", "last_login": null, "is_superuser": false, "created_time": "2022-07-09T08:16:08.706Z", "modified_time": "2022-07-09T08:16:08.706Z", "username": "test_user_0", "displayed_name": "Test User 0", "email": "user1@example.com", "is_staff": false, "is_active": true, "verification_key": null, "in_mailing_list": true, "date_joined": "2022-07-09T08:16:08.706Z", "role": 3, "groups": [], "user_permissions": []}}, {"model": "backend.user", "pk": "e7402929-2233-4beb-82d6-2098b7026e11", "fields": {"password": "pbkdf2_sha256$260000$2hXLSUV9wqMOs8xdbZdrKP$HHpJjQLwO0T0Cl37w2XD1Jcx/cT9YV+xMVOqePP8Xfc=", "last_login": null, "is_superuser": false, "created_time": "2022-07-09T08:16:08.736Z", "modified_time": "2022-07-09T08:16:08.736Z", "username": "test_user_2", "displayed_name": "Test User 2", "email": "user3@example.com", "is_staff": false, "is_active": true, "verification_key": null, "in_mailing_list": true, "date_joined": "2022-07-09T08:16:08.737Z", "role": 3, "groups": [], "user_permissions": []}}, {"model": "backend.user", "pk": "f51682cf-96c5-43b8-bd4a-c0d562b1eabc", "fields": {"password": "pbkdf2_sha256$260000$2hXLSUV9wqMOs8xdbZdrKP$HHpJjQLwO0T0Cl37w2XD1Jcx/cT9YV+xMVOqePP8Xfc=", "last_login": null, "is_superuser": false, "created_time": "2022-07-09T08:16:08.732Z", "modified_time": "2022-07-09T08:16:08.732Z", "username": "test_user_1", "displayed_name": "Test User 1", "email": "user2@example.com", "is_staff": false, "is_active": true, "verification_key": null, "in_mailing_list": true, "date_joined": "2022-07-09T08:16:08.732Z", "role": 3, "groups": [], "user_permissions": []}}, {"model": "backend.taganchor", "pk": "33cba22e-4f1b-44e0-a3e6-a90409720f27", "fields": {"created_time": "2022-07-09T08:16:08.802Z", "modified_time": "2022-07-09T08:16:08.802Z", "item_status": "DRAFT", "anchor_name": "tag2"}}, {"model": "backend.taganchor", "pk": "48e7001b-c94c-4562-878d-de913ed4873d", "fields": {"created_time": "2022-07-09T08:16:08.739Z", "modified_time": "2022-07-09T08:16:08.739Z", "item_status": "DRAFT", "anchor_name": "tag1"}}, {"model": "backend.tutorialanchor", "pk": "4fdb004f-509a-4c8b-afe7-3772c167f04d", "fields": {"created_time": "2022-07-09T08:16:08.744Z", "modified_time": "2022-07-09T08:16:08.744Z", "item_status": "DRAFT", "rank": "jzr", "url": "test-anchor", "anchor_name": "test anchor", "tag_anchors": ["48e7001b-c94c-4562-878d-de913ed4873d"]}}, {"model": "backend.tutorial", "pk": "f80e6ca4-48c8-4798-8aaf-90e699dc9ea1", "fields": {"created_time": "2022-07-09T08:16:08.764Z", "modified_time": "2022-07-09T08:16:08.764Z", "item_status": "DRAFT", "lang_code": "EN", "tutorial_anchor": "4fdb004f-509a-4c8b-afe7-3772c167f04d", "title": "Test Tutorial", "abstract": "Test Abstract", "content_markdown": "# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n<h2> h2 Heading by HTML</h2>\n\n## Math \ninline: $\\sqrt{2}$ 1\n$$\n\\mathbb{R}^3\n$$\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\nSyntax highlighting\n\n```python\na = lambda x: x * x\ndef test(n):\n   return a(n)\n\n```\n\n```markdown\n# title h1\n\n- l1\n- l2\n- l3\n- l4\nsome text with `code` and __bold__ \n\n```\n```typescriptconst a = 1\n```\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n## Links\n\n[vue-markdown](https://github.com/miaolz123/vue-markdown)\n\n[link with title](https://github.com/miaolz123/vue-markdown \"VueMarkdown\")\n\nAutoconverted link https://github.com/miaolz123/vue-markdown (enable linkify to see)\n\n\n## Images\n\n![Minion](https://icatcare.org/app/uploads/2018/06/Layer-1704-1200x630.jpg)\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://icatcare.org/app/uploads/2018/06/Layer-1704-1200x630.jpg  \"The Dojocat\"\n\n\n### Emojies\n\n> Classic markup: :wink: :cry: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\n\n### Subscript / Superscript\n\n- 19^th^\n- H~2~O\n\n\n### \\<ins>\n\n++Inserted text++\n\n\n### \\<mark>\n\n==Marked text==\n\n\n### Footnotes\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### Definition lists\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### Abbreviations\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language", "authors": ["e7402929-2233-4beb-82d6-2098b7026e11", "61706ca4-892c-4129-ac69-ceb5d79d8a51", "f51682cf-96c5-43b8-bd4a-c0d562b1eabc"]}}, {"model": "backend.graphanchor", "pk": "3695e52c-777b-480d-b245-290189fe8005", "fields": {"created_time": "2022-07-09T08:16:08.804Z", "modified_time": "2022-07-09T08:16:08.804Z", "item_status": "DRAFT", "url": "test-graph", "anchor_name": "test graph", "default_order": 20, "tag_anchors": ["33cba22e-4f1b-44e0-a3e6-a90409720f27"]}}, {"model": "backend.orderedanchortable", "pk": "bc0cf8fa-03c1-402e-8d26-99c6a1376c34", "fields": {"created_time": "2022-07-09T08:16:08.818Z", "modified_time": "2022-07-09T08:16:08.818Z", "graph_anchor": "3695e52c-777b-480d-b245-290189fe8005", "tutorial_anchor": "4fdb004f-509a-4c8b-afe7-3772c167f04d", "order": 20}}, {"model": "backend.graph", "pk": "40611440-a1a4-4f9d-a58a-ba650fc5df5d", "fields": {"created_time": "2022-07-09T08:16:08.824Z", "modified_time": "2022-07-09T08:16:08.824Z", "item_status": "DRAFT", "graph_anchor": "3695e52c-777b-480d-b245-290189fe8005", "graph_json": {"edges": [{"key": "v_69->v_68", "source": "v_69", "target": "v_68", "attributes": {"id": "e_73", "name": "E-F", "source": "v_68", "target": "v_69", "displayed": {}}}, {"key": "v_69->v_66", "source": "v_69", "target": "v_66", "attributes": {"id": "e_74", "name": "B-F", "source": "v_66", "target": "v_69", "displayed": {}}}, {"key": "v_69->v_75", "source": "v_69", "target": "v_75", "attributes": {"id": "e_78", "name": "D-F", "source": "v_75", "target": "v_69", "displayed": {}}}, {"key": "v_69->v_74", "source": "v_69", "target": "v_74", "attributes": {"id": "e_81", "name": "G-F", "source": "v_74", "target": "v_69", "displayed": {}}}, {"key": "v_75->v_65", "source": "v_75", "target": "v_65", "attributes": {"id": "e_77", "name": "C-D", "source": "v_65", "target": "v_75", "displayed": {}}}, {"key": "v_72->v_64", "source": "v_72", "target": "v_64", "attributes": {"id": "e_71", "name": "H-I", "source": "v_72", "target": "v_64", "displayed": {}}}, {"key": "v_72->v_66", "source": "v_72", "target": "v_66", "attributes": {"id": "e_79", "name": "B-H", "source": "v_66", "target": "v_72", "displayed": {}}}, {"key": "v_67->v_68", "source": "v_67", "target": "v_68", "attributes": {"id": "e_72", "name": "E-K", "source": "v_68", "target": "v_67", "displayed": {}}}, {"key": "v_67->v_74", "source": "v_67", "target": "v_74", "attributes": {"id": "e_76", "name": "G-K", "source": "v_74", "target": "v_67", "displayed": {}}}, {"key": "v_66->v_70", "source": "v_66", "target": "v_70", "attributes": {"id": "e_75", "name": "A-B", "source": "v_70", "target": "v_66", "displayed": {}}}, {"key": "v_68->v_73", "source": "v_68", "target": "v_73", "attributes": {"id": "e_83", "name": "E-L", "source": "v_68", "target": "v_73", "displayed": {}}}, {"key": "v_68->v_65", "source": "v_68", "target": "v_65", "attributes": {"id": "e_70", "name": "C-E", "source": "v_65", "target": "v_68", "displayed": {}}}, {"key": "v_68->v_74", "source": "v_68", "target": "v_74", "attributes": {"id": "e_80", "name": "E-G", "source": "v_68", "target": "v_74", "displayed": {}}}, {"key": "v_65->v_70", "source": "v_65", "target": "v_70", "attributes": {"id": "e_82", "name": "A-C", "source": "v_70", "target": "v_65", "displayed": {}}}], "nodes": [{"key": "v_69", "attributes": {"x": 0.14158142709866434, "y": -0.009582286081413916, "id": "v_69", "name": "F", "size": 10, "displayed": {}}}, {"key": "v_75", "attributes": {"x": 0.06801486069191857, "y": 0.2289512039610408, "id": "v_75", "name": "D", "size": 10, "displayed": {}}}, {"key": "v_72", "attributes": {"x": -0.3549170296467903, "y": -0.40161952167552617, "id": "v_72", "name": "H", "size": 10, "displayed": {}}}, {"key": "v_67", "attributes": {"x": 0.5449661795238367, "y": 0.13440199861414825, "id": "v_67", "name": "K", "size": 10, "displayed": {}}}, {"key": "v_66", "attributes": {"x": -0.13657108540833676, "y": -0.19309786830309722, "id": "v_66", "name": "B", "size": 10, "displayed": {}}}, {"key": "v_71", "attributes": {"x": -0.9999999999999999, "y": 0.7368332414783836, "id": "v_71", "name": "J", "size": 10, "displayed": {}}}, {"key": "v_68", "attributes": {"x": 0.3601340866784741, "y": 0.0011544314754232427, "id": "v_68", "name": "E", "size": 10, "displayed": {}}}, {"key": "v_73", "attributes": {"x": 0.5700598231037489, "y": -0.147890271860211, "id": "v_73", "name": "L", "size": 10, "displayed": {}}}, {"key": "v_65", "attributes": {"x": 0.08856498332648087, "y": 0.09123558368247167, "id": "v_65", "name": "C", "size": 10, "displayed": {}}}, {"key": "v_70", "attributes": {"x": -0.13045183344818678, "y": -0.003422233981471192, "id": "v_70", "name": "A", "size": 10, "displayed": {}}}, {"key": "v_64", "attributes": {"x": -0.5198912824628348, "y": -0.5653770116497179, "id": "v_64", "name": "I", "size": 10, "displayed": {}}}, {"key": "v_74", "attributes": {"x": 0.36850987054302436, "y": 0.12841273433996955, "id": "v_74", "name": "G", "size": 10, "displayed": {}}}], "options": {"type": "undirected", "multi": false, "allowSelfLoops": true}, "attributes": {}}, "makers": ["e7402929-2233-4beb-82d6-2098b7026e11", "61706ca4-892c-4129-ac69-ceb5d79d8a51"]}}, {"model": "backend.graphdescription", "pk": "3a9e244e-ff68-40f8-986a-684a79d7847d", "fields": {"created_time": "2022-07-09T08:16:08.837Z", "modified_time": "2022-07-09T08:16:08.837Z", "item_status": "DRAFT", "lang_code": "EN", "graph_anchor": "3695e52c-777b-480d-b245-290189fe8005", "title": "Test Graph Description", "description_markdown": "# Test Contents", "authors": ["61706ca4-892c-4129-ac69-ceb5d79d8a51"]}}, {"model": "backend.code", "pk": "623355c7-860e-4fa3-b029-c8df3221c6c6", "fields": {"created_time": "2022-07-09T08:16:08.792Z", "modified_time": "2022-07-09T08:16:08.792Z", "name": "YaZOdxahJHlzEaqKVJrRzKOflnLLuoJbbdrPKgzAwRQeNcFouBLDDPjOiOEWirivCsQGZHYKFRhfkxinwTxrRBKoxjYyOhktUogXJfgKcWHYtbZcXrOLSWnVmsstzLsTayxbjILSWbAwtPQOcDGkNjotBmTgcreDWOHmMXROTvCPaOkcVAZMtARywiBPuYkeoxvCvypz", "code": "# Python 3.10\nfrom __future__ import annotations\n\nimport networkx as nx\nfrom seeker import tracer\n\ngraph: nx.Graph\n\n\n# variables whose names are in the tracer will be displayed\n@tracer(\"greeting\", \"a_node\", \"an_edge\", \"node_iterator\")\ndef main() -> None:\n    # since greeting is in `tracer`, it's value will be shown\n    greeting: str = \"hello world :)\"\n    greeting = \"Welcome to Graphery! :)\"\n\n    # graph elements are stored in the `graph_object`\n    # nodes can be referenced by `graph_object.nodes`\n    node_iterator = list(graph.nodes)\n    a_node = node_iterator[0]\n    not_traced_node = node_iterator[1]\n\n    # Similarly, edges can be referenced by `graph_object.edges`\n    edge_iterator = [*graph.edges]\n    an_edge = edge_iterator[0]\n    not_traced_edge = edge_iterator[1]\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "tutorial_anchor": "4fdb004f-509a-4c8b-afe7-3772c167f04d"}}, {"model": "backend.executionresult", "pk": "60e44b4c-45c9-43f2-8bf2-686fc3aa0984", "fields": {"created_time": "2022-07-09T08:16:14.021Z", "modified_time": "2022-07-09T08:16:14.021Z", "code": "623355c7-860e-4fa3-b029-c8df3221c6c6", "graph_anchor": "3695e52c-777b-480d-b245-290189fe8005", "result_json": {"result": [{"line": 0, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": null, "type": "Init", "color": "#B2DF8A"}, "main​@an_edge": {"repr": null, "type": "Init", "color": "#33A02C"}, "main​@greeting": {"repr": null, "type": "Init", "color": "#A6CEE3"}, "main​@node_iterator": {"repr": null, "type": "Init", "color": "#1F78B4"}}}, {"line": 12, "stdout": null, "accesses": null, "variables": null}, {"line": 14, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": null, "type": "Init", "color": "#B2DF8A"}, "main​@an_edge": {"repr": null, "type": "Init", "color": "#33A02C"}, "main​@greeting": {"repr": "'hello world :)'", "type": "String", "color": "#A6CEE3", "pythonId": 140158212723888}, "main​@node_iterator": {"repr": null, "type": "Init", "color": "#1F78B4"}}}, {"line": 15, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": null, "type": "Init", "color": "#B2DF8A"}, "main​@an_edge": {"repr": null, "type": "Init", "color": "#33A02C"}, "main​@greeting": {"repr": "'Welcome to Graphery! :)'", "type": "String", "color": "#A6CEE3", "pythonId": 140158213032816}, "main​@node_iterator": {"repr": null, "type": "Init", "color": "#1F78B4"}}}, {"line": 19, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": null, "type": "Init", "color": "#B2DF8A"}, "main​@an_edge": {"repr": null, "type": "Init", "color": "#33A02C"}, "main​@greeting": {"repr": "'Welcome to Graphery! :)'", "type": "String", "color": "#A6CEE3", "pythonId": 140158213032816}, "main​@node_iterator": {"repr": [{"repr": "'v_69'", "type": "Node", "color": "#828282", "pythonId": 140158191526048}, {"repr": "'v_75'", "type": "Node", "color": "#828282", "pythonId": 140158191526160}, {"repr": "'v_72'", "type": "Node", "color": "#828282", "pythonId": 140158191526272}, {"repr": "'v_67'", "type": "Node", "color": "#828282", "pythonId": 140158191526384}, {"repr": "'v_66'", "type": "Node", "color": "#828282", "pythonId": 140158191526496}, {"repr": "'v_71'", "type": "Node", "color": "#828282", "pythonId": 140158191526608}, {"repr": "'v_68'", "type": "Node", "color": "#828282", "pythonId": 140158191526720}, {"repr": "'v_73'", "type": "Node", "color": "#828282", "pythonId": 140158191526832}, {"repr": "'v_65'", "type": "Node", "color": "#828282", "pythonId": 140158191526944}, {"repr": "'v_70'", "type": "Node", "color": "#828282", "pythonId": 140158191527056}, {"repr": "'v_64'", "type": "Node", "color": "#828282", "pythonId": 140158191527168}, {"repr": "'v_74'", "type": "Node", "color": "#828282", "pythonId": 140158191527280}], "type": "List", "color": "#1F78B4", "pythonId": 140158212731840}}}, {"line": 20, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": "'v_69'", "type": "Node", "color": "#B2DF8A", "pythonId": 140158191526048}, "main​@an_edge": {"repr": null, "type": "Init", "color": "#33A02C"}, "main​@greeting": {"repr": "'Welcome to Graphery! :)'", "type": "String", "color": "#A6CEE3", "pythonId": 140158213032816}, "main​@node_iterator": {"repr": [{"repr": "'v_69'", "type": "Node", "color": "#828282", "pythonId": 140158191526048}, {"repr": "'v_75'", "type": "Node", "color": "#828282", "pythonId": 140158191526160}, {"repr": "'v_72'", "type": "Node", "color": "#828282", "pythonId": 140158191526272}, {"repr": "'v_67'", "type": "Node", "color": "#828282", "pythonId": 140158191526384}, {"repr": "'v_66'", "type": "Node", "color": "#828282", "pythonId": 140158191526496}, {"repr": "'v_71'", "type": "Node", "color": "#828282", "pythonId": 140158191526608}, {"repr": "'v_68'", "type": "Node", "color": "#828282", "pythonId": 140158191526720}, {"repr": "'v_73'", "type": "Node", "color": "#828282", "pythonId": 140158191526832}, {"repr": "'v_65'", "type": "Node", "color": "#828282", "pythonId": 140158191526944}, {"repr": "'v_70'", "type": "Node", "color": "#828282", "pythonId": 140158191527056}, {"repr": "'v_64'", "type": "Node", "color": "#828282", "pythonId": 140158191527168}, {"repr": "'v_74'", "type": "Node", "color": "#828282", "pythonId": 140158191527280}], "type": "List", "color": "#1F78B4", "pythonId": 140158212731840}}}, {"line": 21, "stdout": null, "accesses": null, "variables": null}, {"line": 24, "stdout": null, "accesses": null, "variables": null}, {"line": 25, "stdout": null, "accesses": null, "variables": {"main​@a_node": {"repr": "'v_69'", "type": "Node", "color": "#B2DF8A", "pythonId": 140158191526048}, "main​@an_edge": {"repr": "('v_69', 'v_68')", "type": "Edge", "color": "#33A02C", "pythonId": 140158215132944}, "main​@greeting": {"repr": "'Welcome to Graphery! :)'", "type": "String", "color": "#A6CEE3", "pythonId": 140158213032816}, "main​@node_iterator": {"repr": [{"repr": "'v_69'", "type": "Node", "color": "#828282", "pythonId": 140158191526048}, {"repr": "'v_75'", "type": "Node", "color": "#828282", "pythonId": 140158191526160}, {"repr": "'v_72'", "type": "Node", "color": "#828282", "pythonId": 140158191526272}, {"repr": "'v_67'", "type": "Node", "color": "#828282", "pythonId": 140158191526384}, {"repr": "'v_66'", "type": "Node", "color": "#828282", "pythonId": 140158191526496}, {"repr": "'v_71'", "type": "Node", "color": "#828282", "pythonId": 140158191526608}, {"repr": "'v_68'", "type": "Node", "color": "#828282", "pythonId": 140158191526720}, {"repr": "'v_73'", "type": "Node", "color": "#828282", "pythonId": 140158191526832}, {"repr": "'v_65'", "type": "Node", "color": "#828282", "pythonId": 140158191526944}, {"repr": "'v_70'", "type": "Node", "color": "#828282", "pythonId": 140158191527056}, {"repr": "'v_64'", "type": "Node", "color": "#828282", "pythonId": 140158191527168}, {"repr": "'v_74'", "type": "Node", "color": "#828282", "pythonId": 140158191527280}], "type": "List", "color": "#1F78B4", "pythonId": 140158212731840}}}, {"line": 26, "stdout": null, "accesses": null, "variables": null}]}, "result_json_meta": {}}}]
